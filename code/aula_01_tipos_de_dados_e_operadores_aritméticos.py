# -*- coding: utf-8 -*-
"""Aula 01 - Tipos de Dados e Operadores Aritm√©ticos.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/17TBbttGWRIt3UaGn_ktdp2K4Xrb18LkN

<img src="https://www.cesar.school/wp-content/uploads/2019/09/marca_cesar_school.png" alt="drawing" width="200"/>

# Python - **Aula 01**

---

- Markdown
- Entender conceitos b√°sicos sobre programa√ß√£o;
- Conhecer a linguagem Python;
- Vari√°veis;
- Tipos de dados;
- Manipula√ß√£o de strings.

# Colab e Markdown

O Colab possui dois tipos de c√©lulas: **c√≥digo** e **texto**.

Nas c√©lulas de c√≥digo, voc√™ pode programar e executar os scripts usando Python.

Nas c√©lulas de texto √© poss√≠vel usar a linguagem de marca√ß√£o [Markdown](https://daringfireball.net/projects/markdown/syntax). Voc√™ pode consultar alguns guias sobre o uso do Markdown nesses links:
- https://colab.research.google.com/notebooks/markdown_guide.ipynb
- https://docs.pipz.com/central-de-ajuda/learning-center/guia-basico-de-markdown#open

# Introdu√ß√£o √† vari√°veis

Em termos t√©cnicos, uma vari√°vel atribui um local de armazenamento na mem√≥ria a um valor que est√° vinculado a um nome ou identificador simb√≥lico. O nome da vari√°vel √© usado para fazer refer√™ncia a esse valor armazenado em um programa de computador.
"""

my_int = 103204934813

"""*   o nome da vari√°vel `my_int`
*   o operador de atribui√ß√£o, tamb√©m conhecido como sinal de igual `=`
*   o valor que est√° sendo vinculado ao nome da vari√°vel `103204934813`

Em Python, a declara√ß√£o de uma vari√°vel √© feita apenas no momento de sua atribui√ß√£o, n√£o sendo necess√°rio definir explicitamente seu tipo.

## Regras para cria√ß√£o de nomes de vari√°veis:

- N√£o pode come√ßar com n√∫mero;
- N√£o pode haver espa√ßo (use `_`);
- N√£o pode haver caracteres especiais: `" ' , < > | / \ ( ) @ ! # $ % ^ & * ~ - +`

##Reatribuindo Vari√°veis
"""

nome_composto = "Gerson"
nome_composto = 20
nome_composto = 50
nome_composto = 29.4
nome_composto = "Novo Gerson"
nome_composto = 58.263725

"""# `print()`

Exibe o valor de uma ou v√°rias vari√°veis.

```python
print('exemplo')
print('exemplo', 'v√°rios', 'valores')
print(variavel1, variavel2, variavel3)
```

"""

print("Ol√° Mundo!")
print(nome_composto, my_int, 384, 19.5, "Gerson")
print(my_int)

"""##Atribui√ß√£o m√∫ltipla

Com Python, voc√™ pode atribuir um √∫nico valor a v√°rias vari√°veis ‚Äã‚Äãao mesmo tempo. Isso permite inicializar v√°rias vari√°veis ‚Äã‚Äãde uma vez, que voc√™ mesmo pode reatribuir posteriormente no programa ou por meio da entrada do usu√°rio.

```python
x = y = z = 0
```

Outra possibilidade, √© atribuir v√°rios valores diferentes para vari√°veis espec√≠ficas.

```python
x, y, z = 10, 15, 20
```
"""

x = y = z = 0

x = 0
y = 0
z = 0

x, y, z = 10, 15, 20

x = 10
y = 15
z = 20

print(x)
print(y)
print(z)

"""
#Cria√ß√£o e impress√£o de strings

Textos (strings) existem entre aspas simples `'` ou duplas `"` em Python, portanto, para criar uma string, coloque uma sequ√™ncia de caracteres em um ou outro.

```python
s1 = 'Esta √© uma string entre aspas simples.'

s2 = "Esta √© uma string entre aspas duplas."

s3 = '''Essa √© uma string
entre aspas triplas'''
```

Podemos imprimir strings simplesmente chamando a fun√ß√£o `print()`"""

s1 = 'Esta √© uma string entre "aspas" simples.'

s2 = "Esta √© uma string entre 'aspas' duplas."

s3 = '''Essa √© uma string
entre aspas triplas simples'''

s4 = """Essa √© uma string
entre aspas triplas duplas"""

"""## Sintaxe do coment√°rio

Para escrever coment√°rios em Python usamos o caractere de hash `#`. Tudo o que estiver escrito a direita dele ser√° ignorado at√© o fim da linha.

```python
# coment√°rio de linha
```

√â poss√≠vel ainda escrever um bloco de coment√°rio usando "aspas triplas":
```python
'''exemplo de
coment√°rio
em v√°rias linhas'''
```

### Coment√°rios inline
Os coment√°rios *inline* ocorrem na mesma linha de uma instru√ß√£o, seguindo o pr√≥prio c√≥digo.

Geralmente, os coment√°rios inline s√£o assim:

```python
x = 8 # a vari√°vel x recebe 8 üëç
```
"""

nome = "Gerson" # esta variavel armazena um nome
print(nome)

nome = "Gerson"
"""
esta variavel
armazena um nome
"""
print(nome)

"""# Tipos de dados

√â poss√≠vel exibir os tipos de um valor ou vari√°vel usando a fun√ß√£o `type()`.

## Num√©ricos
- `int` - Inteiros
- `float` - Pontos Flutuantes

## Texto
- `str` - String

## Booleano
- `bool` - `True` ou `False`

## Listas
- `list` - [ ]

## Sets
- `set` - { }

## Tuplas
- `tuples` - ( )

## Dicion√°rios
- `dictionary` - { }
"""

inteiro = 28
altura = 1.83
texto = "Olha s√≥"
exemplo = "10"
b1 = True
b2 = False

"""A flexibilidade da tipagem din√¢mica √© consegu√™ncia de duas estrat√©gias implementadas na linguagem:
- A primeira √© conhecida como **Duck Typing**:
> "Se anda como pato, nada como um pato e faz quack como um pato, ent√£o provavelmente √© um pato"

- A segunda √© a abordagem **EAFP**:
> "*It is Easier to Ask for Forgiveness than Permission*"
>
> "√â melhor pedir desculpas do que pedir permiss√£o"
>
> [Grace Hopper](https://en.wikipedia.org/wiki/Grace_Hopper)
"""

# Exibir os tipos dos dados usando a fun√ß√£o type()
inteiro = 28
print(type(inteiro))
altura = 1.83
print(type(altura))
texto = "Olha s√≥"
print(type(texto))
exemplo = "10"
print(type(exemplo))
b1 = True
print(type(b1))
b2 = False
print(type(b2))

"""# Entrada de Dados
Entrada de dados refere-se ao recebimento de informa√ß√µes do mundo externo para o meio digital.

Em Python, pode ser feito usando a fun√ß√£o `input()`.

Sintaxe da fun√ß√£o:

```python
variavel = input('mensagem opcional')
```

*Obs.: Os dados recebidos do input s√£o sempre `str`.*
"""

entrada = input("Insira a sua idade: ")
print(type(entrada))
print("Valor inserido pelo usu√°rio: ", entrada)

"""#Fun√ß√µes para convers√£o de tipo

Algumas vezes √© necess√°rio converter valores de um tipo para outro. Em Python, todos os tipos possuem contrutores que podem ser usados para **tentar** converter dados de um formato para outro.

```python
int()
float()
bool()
str()
```

##Convertendo os tipos de n√∫mero
"""

# int ‚Üí float
num1 = 10
num2 = float(num1)
print(type(num1))
print(type(num2))
# float ‚Üí int

num4 = int(10.518726781)
print(type(num4))
print("int: ", num4)

# bool ‚Üí int
# True = 1
# False = 0
num5 = int(False)
print(type(num5))
print("int: ", num5)

# str ‚Üí int

num6 = int("56786")
print(type(num6))
print("int: ", num6)

# str ‚Üí float

num7 = float("56786.1873812")
print(type(num7))
print("float: ", num7)

# str ‚Üí bool

num8 = bool("True")
print(type(num8))
print("bool: ", num8)

# int ‚Üí str

num9 = str(1245)
print(type(num9))
print("string: ", num9)

# float ‚Üí str

# bool ‚Üí str

"""# Opera√ß√µes Aritm√©ticas

Em Python as 4 opera√ß√µes aritm√©ticas b√°sicas s√£o feitas usando os tradicionais operadores `+`, `-`, `*` e `/`.

- `x + y`:	Soma de x e y
- `x - y`:	Subtra√ß√£o de x e y
- `x * y`:	Multiplica√ß√£o de x e y
- `x / y`:	Divis√£o de x e y (gerando sempre um valor *float*)

Os operadores de `+`  e `-` tamb√©m podem ser usados para manipular o sinal do n√∫mero:

- `+x`:	Identidade de x
- `-x`:	Sinal alterado de x

Python tamb√©m disp√µe de outros operadores :

- `x // y`:	Divis√£o inteira de x e y
- `x ** y`:	x elevado a y
- `x % y`:	Resto da divis√£o de x por y

"""

print(10 / 3)

"""## Preced√™ncia aritm√©tica

A ordem das opera√ß√µes aritm√©ticas em Python √© semelhante a matem√°tica e pode ser modificada com o uso de par√™nteses `()`

A preced√™ncia aritm√©tica em Python segue a ordem:
1. `()`
2. `**`
3. `*`, `/` (*left-associative*)
4. `+`, `-` (*left-associative*)

```python
2 + 10 * 10 - 5 # 97
(2 + 10) * (10 - 5) # 60
```
"""

2 + 10 * 10 - 5 # 97

(2 + 10) * (10 - 5) # 60

"""##Operadores de atribui√ß√£o

Podem ser usados para incrementar ou decrementar um valor.

* `+=` adiciona e atribui o valor
* `-=` subtrai e atribui o valor
* `*=` multiplica e atribui o valor
* `/=` divide e atribui o valor
* `//=` divide e depois atribuir o valor em inteiro
* `**=` aumentar a pot√™ncia e ent√£o atribuir o valor
* `%=` retorna o resto da divis√£o e depois atribui o valor


"""

num = 10
num += 5
# num = num + 5
print(num)

"""# `str`

## str

Em Python, textos s√£o armazenados como uma sequ√™ncia de caracteres [Unicode](https://pt.wikipedia.org/wiki/Unicode). Essa segu√™ncia, conhecida como **String** √© representada no Python com o tipo `str`.

[ASCII](https://www.ime.usp.br/~kellyrb/mac2166_2015/tabela_ascii.html)

Ex.: `'Exemplo de Texto'`

Por ser uma sequ√™ncia, √© possivel acessar cada caracter atrav√©s de um √≠ndice. Al√©m disso, o tipo `str` fornece uma variedade de m√©todos de manipula√ß√£o desses caracteres.

Para criar uma vari√°vel `str`, √© poss√≠vel usar aspas simples, duplas ou "triplas":
"""

# Aspas simples
print('ü§å')

# Aspas duplas


# Aspas triplas*

"""## Caracteres de Escape

S√£o chamados de **caracteres de escape** marcadores usados para acessar caracteres do c√≥digo Unicode. Para escreve-los, use `contra-barra + caractere`:

| sintaxe | descri√ß√£o |
|---------|-----------|
| `\n` | Quebra de linha |
| `\t` | Tabula√ß√£o |
| `\'` | Aspas simples |
| `\"` | Aspas duplas |
| `\\` | Contra-barra |

> Obs.: A interpreta√ß√£o dos caracteres de escape pode ser "desativada" usando Raw Strings, marcadas com um `r` antes das aspas:
```python
text = r'Exemplo de texto\nSem caracteres de escape'
```
"""

# caracteres de escape
print('Meu irm√£o √© muito \'inteligente\'')
print("Meu irm√£o √© muito 'inteligente'")

# r-strings
print(r'Meu irm√£o √© muito \'inteligente\' \n nova linha')

"""## Fun√ß√£o embutida `len()`

A fun√ß√£o `len()` retorna a quantidade de itens dentro de um "container". Como as strings de Python s√£o cole√ß√µes de caracteres, a fun√ß√£o `len()` quando recebe uma string, retorna a quantade de caracteres do texto.

```python
text = 'supercalifragilisticexpialidocious'
print(len(text)) # 34
```
"""

print(len("Gerson trabalha no CESAR!ü§å"))

"""## str.find()

Retorna a posi√ß√£o de uma determinada substring procurada.

Se o valor retornado for:
- `>= 0` : Substring encontrado numa posi√ß√£o espec√≠fica
- `< 0` : Substring n√£o encontrado
"""

# grs@cesar.school
# 0123456789..
print("grs@cesar.school".find("s"))

"""## str.count()

Retorna a quantidade de ocorr√™ncias de determinada substring.
"""

texto = "grs@cesar.school"
print(texto.count("s"))

"""## Opera√ß√µes com Strings

> ‚ö† Strings em Python s√£o imut√°veis, o que signifca que atribuir um valor a uma posi√ß√£o indexada ir√° resultar em um erro.

Os seguintes operadores podem ser usados com strings:

- `+` - Concatena√ß√£o
- `*` - Repeti√ß√£o
"""

texto = "grs@cesar.school"
# texto[2] = "z" # n√£o pode
print(texto[2])

print("homi" + " aranha")

print("miranha" * 10)

"""## str.lower() e str.upper()

- `.lower()` - Retorna uma nova string com caracteres em min√∫sculo
- `.upper()` - Retorna uma nova string com caracteres em mai√∫sculo
"""

nome = "Gerson"
print(nome.lower())
print(nome.upper())

"""## f-Strings

> formatted string literals

```python
name = 'Gerson'
print(f'Meu nome √© {name}')
```

Mais detalhes sobre f-Strings [aqui](https://realpython.com/python-f-strings/).
"""

nome = "Gerson"
valor = 50

print("Meu nome √©: ", nome, ", o Valor √©: ", valor)
print("Meu nome √©: " + nome + ", o Valor √©: " + str(valor))
print(f"Meu nome √©: {nome}, o Valor √©:  {valor}")

"""## str.split()

Retorna uma lista de substrings dividido por um separador. Se nenhum par√¢metro for passado, o separador (ou delimitador) adotado √© o espa√ßo em branco.
"""

numeros = '10 20 30'
print(numeros.split())
a, b, c = numeros.split()
print(a, b, c)

"""## str.replace()

Retorna uma nova string com um texto substitu√≠do por outro.

```python
str.replace('old', 'new')
```
"""

txt = "Geralt √© um Witcher famoso."
print(txt.replace("Geralt", "Geraldo").replace("Witcher", "Bruxo"))

"""# Exerc√≠cios Fundamentais

1. Fa√ßa um programa que mostre a mensagem "*Al√¥ mundo*" na tela
"""

print('Al√¥ mundo')

"""2. Fa√ßa um programa que pe√ßa um n√∫mero e ent√£o mostre a mensagem `O n√∫mero informado foi [n√∫mero]`."""

num = input('Informe um numero: ')
print('O numero informado foi:', num)

"""3. Fa√ßa um programa que pe√ßa dois n√∫meros e imprima a soma."""

num1 = int(input('Informe um numero: '))
num2 = int(input('Informe outro numero: '))

print('Soma', num1 + num2)

"""4. Fa√ßa um programa que pe√ßa as 4 notas bimestrais e mostre a m√©dia."""

nota_1 = float(input("Digite a primeira nota: "))
nota_2 = float(input("Digite a segunda nota: "))
nota_3 = float(input("Digite a terceira nota: "))
nota_4 = float(input("Digite a quarta nota: "))

nota_final = (nota_1 + nota_2 + nota_3 + nota_4) / 4

print('A m√©dia √©', nota_final)

"""5. Fa√ßa um programa que converta metros para cent√≠metros."""

metros = float(input("Digite o tamanho em metros: "))

centimentros = metros * 100

print('Tamanho em centimetros √©:', centimentros)

"""6. Fa√ßa um programa que pe√ßa o raio de um c√≠rculo, calcule e mostre sua √°rea."""

r = float(input('Digite o raio do c√≠rculo: '))
pi = 3.14
area = (r**2) * pi
print('Area √© ', area)

import math

r = float(input('Raio: '))
area = math.pi * math.pow(r, 2)
print(area)

"""7. Fa√ßa um programa que calcule a √°rea de um quadrado, em seguida mostre o dobro desta √°rea para o usu√°rio."""

lado = int(input('Digite o lado do quadrado: '))
dobro_area = (lado**2)*2
print(f"Area √© {dobro_area:.2f}")

"""8. Fa√ßa um programa que pergunte quanto voc√™ ganha por hora e o n√∫mero de horas trabalhadas no m√™s. Calcule e mostre o total do seu sal√°rio no referido m√™s."""

salario = float (input('Qual o seu sal√°rio por hora: '))
horas = float (input('Quantas horas voc√™ trabalhou no m√™s: ' ))

print ('Seu sal√°rio total no refererido m√™s √© de {} '.format(salario * horas))

"""9. Fa√ßa um programa que pe√ßa a temperatura em graus Fahrenheit, transforme e mostre a temperatura em graus Celsius.

  $ ¬∞C = 5 \times ((¬∞F-32) / 9) $

"""

f = float(input("Qual temperatura: "))
c = 5 * ((f-32)/9)
print(f"Temperatura √© {c:.2f}")

"""10. Fa√ßa um programa que pe√ßa a temperatura em graus Celsius, transforme e mostre em graus Fahrenheit.

  $¬∞F = (¬∞C \times 9 / 5) + 32 $
"""

c = float(input("Qual temperatura: "))
f = c * 1.8 + 32
print(f"Temperatura √© {f:.2f}")

"""11. Fa√ßa um programa que pe√ßa 2 n√∫meros inteiros e um n√∫mero real. Calcule e mostre:
- O produto do dobro do primeiro com metade do segundo.
- Soma do triplo do primeiro com o terceiro.
- Terceiro elevado ao cubo.
"""

num1 = int(input('Digite o primeiro n√∫mero inteiro: '))
num2 = int(input('Digite o segundo n√∫mero inteiro: '))
num3 = float(input('Digite um n√∫mero real: '))

produto = (2 * num1) * (num2 / 2)
soma = 3 * (num1 + num3)
potencia_num = (num3**3)
print(f'Produto: {produto} | Soma: {soma} | Pot√™ncia C√∫bica: {potencia_num}')

"""12. Tendo como dados de entrada a altura de uma pessoa, construa um algoritmo que calcule seu peso ideal em Kg usando a seguinte f√≥rmula:

  $ peso\_ideal = (72.7 \times altura) - 58 $
"""

altura = float(input('Digite sua altura: '))
peso = (72.7 * altura) - 58
print(f"Seu peso ideal √©: {peso:.2f}")

"""13. Tendo como dado de entrada a altura ($h$) de uma pessoa, construa um algoritmo que calcule seu peso ideal, utilizando as seguintes f√≥rmulas:
- Para homens: $ (72.7 \times h) - 58 $
- Para mulheres: $ (62.1 \times h) - 44.7 $
"""

h = float(input('Digite sua altura: '))

peso = (72.7 * altura) -58
print(f"O peso ideal para homem √©: {peso:.2f}")
peso = (62.1 * altura) -44.7
print(f"O peso ideal para mulher √©: {peso:.2f}")

"""14. Escreva um programa que substitui as ocorrencias de um caractere 0 em uma string por outro caractere 1."""

s = '010101'
print(s.replace('0', '1'))

"""15. Fa√ßa um programa que receba do usuario uma string. O programa imprime a string sem suas vogais."""

txt = input('Insira a string: ')
txt = txt.replace('a', '').replace('e', '').replace('i', '').replace('o', '').replace('u', '')

print(txt)

"""# Exerc√≠cios complementares

16. Fa√ßa um programa que pergunte quanto voc√™ ganha por hora e o n√∫mero de horas trabalhadas no m√™s. Calcule e mostre o total do seu sal√°rio no referido m√™s, sabendo-se que s√£o descontados 11% para o Imposto de Renda, 8% para o INSS e 5% para o sindicato, fa√ßa um programa que nos d√™:
    - sal√°rio bruto.
    - quanto pagou ao INSS.
    - quanto pagou ao sindicato.
    - o sal√°rio l√≠quido.
    - calcule os descontos e o sal√°rio l√≠quido, conforme a tabela abaixo:

```
            + Sal√°rio Bruto : R$
            - IR (11%) : R$
            - INSS (8%) : R$
            - Sindicato ( 5%) : R$
            = Sal√°rio Liquido : R$
```
> Obs.: Sal√°rio Bruto - Descontos = Sal√°rio L√≠quido.
"""

valor_hora = float (input('Digite qual o valor da sua hora de trabalho: '))
carga_horaria = float (input('Digite quantas horas voc√™ trabalhou esse m√™s: '))
salario_bruto = valor_hora * carga_horaria
ir = salario_bruto * .11
inss = salario_bruto * .08
sindicato = salario_bruto * .05
salario_liquido = salario_bruto - ir - inss - sindicato

print('O total do seu sal√°rio bruto nesse m√™s foi de R$ {}'.format(salario_bruto))
print('O total do valor recolhido para o IR nesse m√™s foi de R$ {}'.format(ir))
print('O total do valor recolhido para o INSS nesse m√™s foi de R$ {}'.format(inss))
print('O total do valor recolhido para o Sindicato nesse m√™s foi de R$ {}'.format(sindicato))
print('O total do seu sal√°rio liquido nesse m√™s foi de R$ {}'.format(salario_liquido))

"""17. Fa√ßa um programa que pe√ßa o tamanho de um arquivo para download (em MB) e a velocidade de um link de Internet (em Mbps), calcule e informe o tempo aproximado de download do arquivo usando este link (em minutos)."""

tamanho_arquivo = int(input('Digite quanto megabytes (MB) tem o arquivo para download: '))
velocidade_link = int(input('Digite qual a velocidade do link de internet em Mbps: '))
tempo_em_minutos = tamanho_arquivo / velocidade_link / 60
print(f'O tempo aproximado de download do arquivo usado neste link √© de {tempo_em_minutos} min')

"""18. Jo√£o Papo-de-Pescador, homem de bem, comprou um microcomputador para controlar o rendimento di√°rio de seu trabalho. Toda vez que ele traz um peso de peixes maior que o estabelecido pelo regulamento de pesca do estado de S√£o Paulo (50 quilos) deve pagar uma multa de R\$ 4,00 por quilo excedente. Jo√£o precisa que voc√™ fa√ßa um programa que leia a vari√°vel peso (peso de peixes) e calcule o excesso. Gravar na vari√°vel excesso a quantidade de quilos al√©m do limite e na vari√°vel multa o valor da multa que Jo√£o dever√° pagar. Imprima os dados do programa com as mensagens adequadas."""

peso = float(input('Qual valor de peso de peixes: '))
excesso = peso - 50
if excesso > 0:
  multa = excesso * 4
  print(f"Jo√£o deve pagar R${multa:.2f} de multa")
else:
  print("Jo√£o n√£o ir√° precisar pagar multa")

"""19. Fa√ßa um programa para uma loja de tintas. O programa dever√° pedir o tamanho em metros quadrados da √°rea a ser pintada. Considere que a cobertura da tinta √© de 1 litro para cada 3 metros quadrados e que a tinta √© vendida em latas de 18 litros, que custam R\$ 80,00. Informe ao usu√°rio a quantidades de latas de tinta a serem compradas e o pre√ßo total. Obs.: somente s√£o vendidos um n√∫mero inteiro de latas."""

# 1 litro de tinta --> 3 m¬≤
# 1 lata de tinta --> 18 L
# 1 litro de tinta x lata de tinta --> 54 m¬≤
# 1 lata de tinta = R$ 80.00

area_pintura = float (input('Digite quanto metros quadrados voc√™ deseja pintar: '))

if area_pintura % 54 == 0:
  qtd_latas = area_pintura//54
else:
  qtd_latas = area_pintura//54 + 1
preco_total = qtd_latas*80
print(f'Voc√™ precisar√° de {qtd_latas} latas. O valor total ser√° de R$ {preco_total}'))

"""20. Fa√ßa um Programa para uma loja de tintas. O programa dever√° pedir o tamanho em metros quadrados da √°rea a ser pintada. Considere que a cobertura da tinta √© de 1 litro para cada 6 metros quadrados e que a tinta √© vendida em latas de 18 litros, que custam R\$ 80,00 ou em gal√µes de 3,6 litros, que custam R\$ 25,00.
  - Informe ao usu√°rio as quantidades de tinta a serem compradas e os respectivos pre√ßos em 3 situa√ß√µes:
  - comprar apenas latas de 18 litros;
  - comprar apenas gal√µes de 3,6 litros;
  - misturar latas e gal√µes, de forma que o desperd√≠cio de tinta seja menor. Acrescente 10% de folga e sempre arredonde os valores para cima, isto √©, considere latas cheias.
"""

# Resolu√ß√£o

# 1 litro de tinta --> 6 m¬≤

# 1 lata de tinta --> 18 L
# 1 litro de tinta x lata de tinta --> 108 m¬≤
# 18L de tinta = R$ 80.00

# 1 lata de tinta --> 3,6 L
# 1 litro de tinta x lata de tinta --> 21,6 m¬≤
# 3,6L de tinta = R$ 25.00

area_pintura = float (input('Digite quanto metros quadrados voc√™ deseja pintar: '))


# Apenas com lata de 18L
if area_pintura % 108 == 0:
  qtd_latas = area_pintura//108
else:
  qtd_latas = area_pintura//108 + 1
preco_total = qtd_latas*80
print(f'Voc√™ precisar√° de {qtd_latas} latas. O valor total ser√° de R$ {preco_total}')

# Apenas com lata de 3.6L
if area_pintura % 21.6 == 0:
  qtd_latas = area_pintura//21.6
else:
  qtd_latas = area_pintura//21.6 + 1
preco_total = qtd_latas*25
print(f'Voc√™ precisar√° de {qtd_latas} latas. O valor total ser√° de R$ {preco_total}')

area_pintura*=.1
lata_18 = area_pintura//108

area_pintura = area_pintura - (lata_18*108)
if area_pintura % 21.6 == 0:
  lata_3 = area_pintura//21.6
else:
  lata_3 = area_pintura//21.6 + 1

preco_total = lata_18*80 + lata_3*25

print(f'Voc√™ precisar√° de {lata_18} latas de 18L e {lata_3} latas de 3.6L. O valor total ser√° de R$ {preco_total}')